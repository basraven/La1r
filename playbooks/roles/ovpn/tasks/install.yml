---
- hosts: all
  # Source: https://www.digitalocean.com/community/tutorials/how-to-set-up-an-openvpn-server-on-ubuntu-16-04
  remote_user: "{{ target_user }}"
  tasks:
    - name: Install OpenVPN, Easy-rsa, UFW and Fail2ban
      apt: name={{item}} state=present
      with_items:
        - openvpn
        - easy-rsa
        - ufw
        - fail2ban
    - name: Remove the {{ openvpn_ca_dir }} 
      file:
        path: "{{ openvpn_ca_dir }}"
        state: absent
        force: yes
    - name: "Create a new CA directory at {{ openvpn_ca_dir }}"
      command: make-cadir {{ openvpn_ca_dir }}
    - name: "Edit some of the CA information from {{ openvpn_ca_dir }}/vars"
      lineinfile:
        dest: "{{ openvpn_ca_dir }}/vars"
        regexp: "{{ item.regexp }}"
        line: "{{ item.line }}"
      with_items:
        - { regexp: '^export KEY_COUNTRY',  line: 'export KEY_COUNTRY="{{ openvpn_KEY_COUNTRY }}"' }
        - { regexp: '^export KEY_PROVINCE', line: 'export KEY_PROVINCE="{{ openvpn_KEY_PROVINCE }}"' }
        - { regexp: '^export KEY_CITY',     line: 'export KEY_CITY="{{ openvpn_KEY_CITY }}"' }
        - { regexp: '^export KEY_ORG',      line: 'export KEY_ORG="{{ openvpn_KEY_ORG }}"' }
        - { regexp: '^export KEY_EMAIL',    line: 'export KEY_EMAIL="{{ openvpn_KEY_EMAIL }}"' }
        - { regexp: '^export KEY_OU',       line: 'export KEY_OU="{{ openvpn_KEY_OU }}"' }
        - { regexp: '^export KEY_NAME',     line: 'export KEY_NAME="{{ openvpn_KEY_NAME }}"' }
    - name: Copy the generated {{ openvpn_ca_dir }}/openssl-x.x.x.cnf to openssl.cnf
      copy:
        src: "{{ openvpn_ca_dir }}/openssl-1.0.0.cnf"
        dest: "{{ openvpn_ca_dir }}/openssl.cnf"
        force: True
        remote_src: yes
    - name: "Clean the keys dir, and build CA"
      shell: '. ./vars ; ./clean-all ; yes "" | ./build-ca'
      args:
        chdir: "{{openvpn_ca_dir}}"
        executable: /bin/bash
    # The default "build-key-server.sh uses --interact, we don't want that"
    - name: Create server key and Diffie-Hellman keys (might take a while)
      shell: '. ./vars ; export EASY_RSA="${EASY_RSA:-.}" ; "$EASY_RSA/pkitool" --server server ; ./build-dh '
      async: 2000
      poll: 10
      args:
        chdir: "{{openvpn_ca_dir}}"
        executable: /bin/bash
    - name: Generate an HMAC signature to strengthen the server's TLS integrity verification capabilities
      shell: "openvpn --genkey --secret ./keys/ta.key"
      args:
        chdir: "{{openvpn_ca_dir}}"
        executable: /bin/bash
    - name: Copy the generated keys to openvpn
      copy:
        src: "{{ openvpn_ca_dir }}/keys/{{item}}"
        dest: /etc/openvpn
        force: True
        remote_src: yes
      with_items:
        ['ca.crt', 'server.crt', 'server.key', 'ta.key', 'dh2048.pem' ]
    - name: Copy the example config from openvpn
      shell: gunzip -c /usr/share/doc/openvpn/examples/sample-config-files/server.conf.gz | tee /etc/openvpn/server.conf
    - name: Adjust /etc/openvpn/server.conf with custom configuration
      lineinfile:
        dest: /etc/openvpn/server.conf
        regexp: "{{ item.regexp }}"
        line: "{{ item.line }}"
      with_items:
        - { regexp: '^;?tls-auth',          line: 'tls-auth ta.key 0' }
        - { regexp: '^;?key-direction',     line: 'key-direction 0' }
        - { regexp: '^;?cipher',            line: 'cipher {{ openvpn_cipher }}' }
        - { regexp: '^;?auth',              line: 'auth {{ openvpn_auth }}' }
        - { regexp: '^;?user',              line: 'user nobody' }
        - { regexp: '^;?group',             line: 'group nogroup' }
        - { regexp: '^;?port',              line: 'port {{ openvpn_port }} ' }
        - { regexp: '^;?proto',             line: 'proto {{ openvpn_proto }} ' }
        - { regexp: '^;?script-security',   line: 'script-security 2' }
        - { regexp: '^;?dhcp-option',       line: 'dhcp-option DNS 10.8.0.1' }
        - { regexp: '^;?client-to-client',  line: 'client-to-client' }
        - { regexp: '^;?log ',              line: 'log /var/log/openvpn.log' }

    # Networking and Security
    - name: Allow IP Forwarding
      lineinfile:
        path: /etc/sysctl.conf
        regexp: '^#?net.ipv4.ip_forward='
        line: 'net.ipv4.ip_forward=1'

    - name: Allow UFW passthrough for port {{ openvpn_port }}
      ufw:
        rule: allow
        port: "{{ openvpn_port }}"

    # - name: Allow out UFW passthrough for tun0 interface
    #   ufw:
    #     rule: allow
    #     direction: out
    #     interface: tun0

    # - name: Allow in UFW passthrough for tun0 interface
    #   ufw:
    #     rule: allow
    #     direction: in
    #     interface: tun0

    #TODO: Adjust the UFW Rules to Masquerade Client Connections

    - name: Copy openvpn jail filter script
      template: src=openvpn.local.j2 dest=/etc/fail2ban/filter.d/openvpn.local mode=0755
    - name: Copy openvpn jail script
      template: src=openvpn.j2 dest=/etc/fail2ban/jail.d/openvpn mode=0755
    - name: Restart affected services
      service:
        name: "{{ item }}"
        state: restarted
      with_items:
        - openvpn
        - fail2ban
        - ufw
