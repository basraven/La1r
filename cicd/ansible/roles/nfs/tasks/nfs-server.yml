---
- name: Nfs Server / Make sure folder exists
  become: yes
  file:
    path: "{{ nfs_storage_classes[item]['hostpath']  }}"
    state: directory
    mode: '0755'
    recurse: yes
  with_items: "{{ nfs_storage_capabilities }}"


- name: Nfs Server / Enable nfs-kernel kerberos
  become: yes
  lineinfile:
    dest: /etc/default/nfs-kernel-server
    regexp: "^NEED_SVCGSSD="
    line: "NEED_SVCGSSD=no"
    state: present
    backup: yes
  when: ansible_facts['distribution'] != "CentOS"

- name: Nfs Server / Set export
  become: yes
  lineinfile:
    dest: /etc/exports
    regexp: "^{{ nfs_storage_classes[item]['hostpath'] }}"
    line: "{{ nfs_storage_classes[item]['hostpath'] }} 192.168.5.0/20(rw,no_all_squash,no_subtree_check,async,no_root_squash)"
    # (with backup user) line: "{{ nfs_storage_classes[item]['hostpath'] }} *(rw,async,no_subtree_check,anonuid=1040,anongid=1040)"
    # (original) line: "{{ nfs_storage_classes[item]['hostpath'] }} *(rw,async,no_subtree_check,anonuid=1040,anongid=1040)"
    # (with kerberos) line: "{{ nfs_storage_classes[item]['hostpath'] }} *(rw,fsid=0,insecure,no_subtree_check,async,anonuid=65534,anongid=65534)"
    state: present
    backup: yes
  with_items: "{{ nfs_storage_capabilities }}"

- name: Nfs Server / Unmask nfs-common
  become: yes
  file:
    path: /lib/systemd/system/nfs-common.service
    state: absent
    
- name: Nfs Server / Restart system services
  become: yes
  service: 
    name: "{{item}}"
    enabled: yes
    state: restarted
  with_items:
      - nfs-server 
      - rpcbind


- name: Nfs Server / Allow in UFW
  become: yes
  ufw:
    rule: allow
    port: "2049"