---
# Sources: 
  # Server install: https://help.ubuntu.com/community/Kerberos
  # NFSv4 config: https://help.ubuntu.com/community/NFSv4Howto
- name: Kerberos / Client & Server Install packages
  become: yes
  package: 
    name: "{{ item.package }}"
    state: present
  with_items:
    - { package: 'krb5-libs',         when: "{{ ansible_facts['distribution'] == 'CentOS' }} "}
    - { package: 'krb5-workstation',  when: "{{ ansible_facts['distribution'] == 'CentOS' }} "}
    - { package: 'krb5-kdc',          when: "{{ ansible_facts['distribution'] != 'CentOS' }} "}
    - { package: 'krb5-server',       when: "{{ ansible_facts['distribution'] == 'CentOS' and kerberos == 'server' }} "}
    - { package: 'krb5-admin-server', when: "{{ ansible_facts['distribution'] != 'CentOS' and kerberos == 'server' }} "}
  when: "{{ item.when }}"

- name: Kerberos / Change default client (realm) config
  become: yes
  template:
    src: krb5.conf.j2
    dest: "/etc/krb5.conf"
    mode: "0755"

- name: Kerberos / Add to /etc/hosts
  become: yes
  lineinfile:
    dest: "/etc/hosts"
    regexp: "{{ item.regexp }}"
    line: "{{ item.line }}"
  with_items:
    - { regexp: '^127.0.0.1 kerberos.la1r.com localhost kerberos',
    line: '127.0.0.1 kerberos.la1r.com localhost kerberos' }
  when: "{{ kerberos == 'server' }} "

- name: Kerberos / Change default server ACL config
  become: yes
  template:
    src: kadm5.acl.j2
    dest: "/etc/krb5kdc/kadm5.acl"
    mode: "0755"
    
- name: Kerberos / Change default server (realm) config
  become: yes
  template:
    src: kdc.conf.j2
    dest: "{{ item.config }}"
    mode: "0755"
  with_items:
    - { config: '/etc/krb5kdc/kdc.conf',            when: "{{ ansible_facts['distribution'] != 'CentOS' }} "}
    - { config: '/var/kerberos/krb5kdc/kdc.conf',   when: "{{ ansible_facts['distribution'] == 'CentOS' }} "}
  when: "{{ item.when }}"

- name: Kerberos / Include Kerberos credentials
  include_vars:
    file: "{{credentials_dir}}/kerberos/kerberos-credentials.yml"


# - name: Kerberos / Create new realm
#   become: yes
#   shell:  '{{ item.command }}'
#   args:
#     executable: /bin/bash
#   with_items:
#     - { command: "set +e && printf \"{{ kerberos_admin }}\n{{ kerberos_admin }}\" | krb5_newrealm && set -e ", when: "{{ ansible_facts['distribution'] != 'CentOS' }} "}
#     - { command: "kdb5_util create -s -P {{ kerberos_admin }} ",      when: "{{ ansible_facts['distribution'] == 'CentOS' }} "}
#   when: "{{ item.when }}"
  
  # TO REMOVE DB:
  # kdb5_util destroy -f

- name: Kerberos / Make sure log file has correct permissions
  become: yes
  file:
    path: /var/log/krb5.log
    state: touch
    mode: '0777'

- name: Kerberos / Restart Kerberos Service
  become: yes
  service:
    name: krb5-kdc
    enabled: yes
    state: restarted

- name: Kerberos / Add principal with keytab
  become: yes
  shell:  |
    kadmin.local -q 'add_principal -pw bas raver/admin'
    kadmin.local -q 'addprinc -randkey nfs/nfs-server.domain'
    kadmin.local -q 'addprinc -randkey nfs/nfs-client.domain'
    kadmin.local -q 'addprinc -randkey nfs/test-ubuntu'
    kadmin.local -q 'addprinc -randkey nfs/ubuntu2004.localdomain'
    kadmin.local -q "ktadd /home/basraven/raver.keytab raver/admin"
    kadmin.local -q "ktadd /home/basraven/raver.keytab nfs/nfs-server.domain"
    kadmin.local -q "ktadd /home/basraven/raver.keytab nfs/test-ubuntu"
    kadmin.local -q "ktadd /home/basraven/raver.keytab nfs/ubuntu2004.localdomain"
    chown {{ target_user_name }}:{{ target_user_name }} $keytab_location  
    
  args:
    executable: /bin/bash

- name: Kerberos / Allow in UFW
  become: yes
  ufw:
    rule: allow
    port: "88"

