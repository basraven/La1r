'use strict';(function(){const indexCfg={cache:true};indexCfg.doc={id:'id',field:['title','content'],store:['title','href'],};const index=FlexSearch.create('balance',indexCfg);window.bookSearchIndex=index;index.add({'id':0,'href':'/docs/','title':"Overview",'content':""});index.add({'id':1,'href':'/docs/conceptual-setup/','title':"Conceptual Setup",'content':"Conceptual details To give a 1-minute overview: this is the conceptual model driving La1r: It clearly shows how the Event-Driven architecture is the heart of La1r\nTo summarize, we identify several conceptual components:\n Raw Data producer - Any sensor, smart camera, etc. which is hooked up to the raw data bus and produces data from which well formed events can be produced. Raw Data Bus - The data vehicle which stores all incoming data which can be used to create events off, this can be very raw measurement data of data structured in an application specific format Automation Event Transformation - This can be any application which is connected to the Raw Data Bus and is able to create events conforming to the Event Specifications based on the data coming from the Raw Data Bus (this is non-restrictive and can also come from other places) Event Specifications - All specifications used to structure all events which are published on the Structured Event Bus. These Events specifications will also be published on la1r.com Structured Event Bus - The data vehicle which stores the structured events, forming the logical epi-center of the event-driven la1r. The majority of the events are sourced by transformed raw data from the Raw Data Bus AI Processes - This is identical to the Automated Event Transformation, only these processes primarily involve AI to add events to the Structured Events Bus. In addition it can take already published events and create new events on that behavior based on predictive models. Structured Event Consumer - This can be any device which consumes events which are published on the Structured Event Bus and acts on it with a certain behavior, for example a light switching on based on an event. This consumer also entails translating the Structured Event into a format a device is able to operate on.  "});index.add({'id':2,'href':'/docs/technical-setup/','title':"Technical Setup",'content':"Coming soon "});index.add({'id':3,'href':'/docs/technical-setup/ai-automation-analytics/','title':"AI, Automation, Analytics",'content':"Coming soon "});index.add({'id':4,'href':'/docs/planning/','title':"Planning",'content':"What's next? Since I'm (currently) only developing la1r by myself, there are only so many things you can do at once. For this reason I created this planning page in which I track and prioritize what I will add to la1r next. Feel free to add comments on this through Github!\n Formal service bus definition and separation of raw data and defined event data find-lf - wifi tracking as input events on the Event Bus based on AI models An event data dashboard Refactor mosqitto to vernemq Ceph file system based on this guide: https://owncloud.org/news/running-owncloud-in-kubernetes-with-rook-ceph-storage-step-by-step/  "});index.add({'id':5,'href':'/docs/conceptual-setup/event-specifications/','title':"Event Specifications",'content':"Event Specifications The event specifications are a exhaustive list of specifications to which any event should conform. With specifying this, decoupled and predictable interactions between services can be achieved.\nThese types of event specifications are currently defined:\n Content specifications - Specifications putting requirements on the content of the event Attribute specifications - Specifications putting requirements on the attributes of an event  Content specifications  All content of an event should be structured in JSON format There cannot be duplicate data between content and attribute data All events should contain a Unix epoch timestamp with Amsterdam as timezone, \u0026ldquo;unixts\u0026rdquo; should be foramted as %i All events should contain an \u0026ldquo;origin\u0026rdquo; reference (e.g. \u0026ldquo;automated/face-recognition/1\u0026rdquo;) The payload of an event can reference external data with \u0026ldquo;payload\u0026rdquo; or can contain string or blob information:  Direct string, blob or other payload formats such as a JSON object Direct source path in cephFS (spoofed until ceph is implemented) Direct protocol link (e.g. tcp://videostream1.bas) Hyperlink (e.g. https://videostream1.la1r.com)    Content Examples  Example 1, a payload with a link { \u0026#34;unixts\u0026#34; : 1578157000, \u0026#34;origin\u0026#34; : \u0026#34;manual/light-switch/6\u0026#34;, \u0026#34;payload\u0026#34; : \u0026#34;tcp://videostream1.la1r.com\u0026#34; }  Example 2, a payload with a JSON blob { \u0026#34;unixts\u0026#34; : 1577157000, \u0026#34;origin\u0026#34; : \u0026#34;automated/picture-on-login/pc-1\u0026#34;, \u0026#34;payload\u0026#34; : { \u0026#34;online-time-seconds\u0026#34; : 3212, \u0026#34;capture-location\u0026#34; : \u0026#34;/captures/temp/weekly-cleaned/picture-on-login/pc-1/1.jpeg\u0026#34; } }   Attribute specifications  The topic modelling standard should be applied on any event published Attributes need to be as specific as possible, it should not attempt to group multiple entities because this can be achieved by more advanced queries in the event bus protocol by the use of wildcards.  Topic modelling standard Topic modelling is a conceptual architectural decision which should be made very conscious of future extensions. Large refactor movements in the conceptual structure of an Event bus can have a major change impact because many applications need to change their way of interacting.\nWhat needs to be captured in topics The following things arose while brainstorming about what should be captured in a La1r structured event bus:\n This list will probably be extended in the (near) future\n  Any of the flow types  Actuator - such as lights that can dim of switch, these can be binary, stepped or by value. Sensor - such as temperature, presence, location or humidity sensors Intent - this can be behavior, derived from manual input from a person, or based on automated (AI) analytics   Location specificity - is something specific for a location (in the la1r / outside the la1r)? Numbering with \u0026ldquo;-%i\u0026rdquo; as template. \u0026ldquo;-\u0026rdquo; if not location specific. Person or device specificity - is something specific for a person or device? Numbering with \u0026ldquo;-%i\u0026rdquo; as template. \u0026ldquo;-\u0026rdquo; if not person or device specific.  Topic hierarchy Taking this into consideration, all events in the structured event bus need to following this topic hierarchy (all lower case, without spaces or special characters), either indirect by translation from the raw event bus or direct when considering these standards:\n\u0026lt;flow type\u0026gt;/\u0026lt;Location specification\u0026gt;/\u0026lt;Person or device specification\u0026gt; Examples of hierarchy usage  Example 1 - turing off light 1 in the living room actuator/living-room/lightswitch-1  Example 2 - security camera 1 sensing an unidentified person sensor/front-door/doorbel-camera-1  Example 3 - analysis algo 1 predicts an intent to shutdown all lights in the backyard intent/backyard/lightswitch-all   "});index.add({'id':6,'href':'/docs/conceptual-setup/structured-event-bus/','title':"Structured Event Bus",'content':"Structured Event Bus The data vehicle which stores the structured events, forming the logical epi-center of the event-driven la1r. The majority of the events are sourced by transformed raw data from the Raw Data Bus\n All events in the structured event bus conform to the [./event-specifications] to be formally \u0026ldquo;accepted\u0026rdquo; The current goal is to have a single event bus through which the majority (if it makes sense) of the applications communicate through.  "});index.add({'id':7,'href':'/docs/technical-setup/ai-automation-analytics/Active-AI-Applications/','title':"Active a I Applications",'content':"Coming soon "});index.add({'id':8,'href':'/docs/technical-setup/ai-automation-analytics/Analytics/','title':"Analytics",'content':"Coming soon "});index.add({'id':9,'href':'/docs/technical-setup/ai-automation-analytics/Automation/','title':"Automation",'content':"Coming soon "});index.add({'id':10,'href':'/','title':"Introduction",'content':"The Event-Driven la1r This site showcases everything which was implemented in my own home la1r. The goal is to see how much Tracking, Automation and AI still brings convenience and what is just flat-out annoying. Since I'm running this at home, me and people in my environment are my test subjects, please regard all the material and integrations tested as such.\nKey topics The following key topics will be touched to showcase la1r:\n Kubernetes, Docker AI, Automation Home Automation, Home surveillance And many more things!  Conceptual documentation This documentation captures the underlying concepts, goals and roadmap for the La1r project.\nRead more\n Technical documentation All the details on how each of the concepts is implemented can be found here. It will also contain details on the roadmap based on the conceptual roadmap.\nRead more\n  Why this site? I noticed that combining all of these applications into a single integration environment can be challenging to keep all documentation and notes into a single place. To force myself to properly document my steps and also to give back to the open-source community, I decided to publish all of it on this domain. Hopefully it can also help others with similar aspirations.\n\u0026ldquo;Please do try this at home\u0026rdquo; Since this overview is focussed on sharing, I would like to invite anyone to try everything at home, it will not have insane hardware requirements or require niche hardware setups.\nI would also invite anyone to do suggestions on github and to file issues when encountered.\nEnjoy! - Seb\n"});})();