---
apiVersion: v1
kind: ConfigMap
metadata:
  name: openvpn-status-config
  namespace: monitoring
data:
  cfg.json: |-
    {
      "port": 80,
      "bind": "0.0.0.0",
      "servers": [
        {"id": 0, "name": "Big Raver", "host": "10.8.0.1","man_port": 5555}
      ],
      "username": "admin",
      "password": "admin",
      "web": {
        "dateFormat": "HH:mm - DD.MM.YY"
      }
    }
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: openvpn-status
  namespace: monitoring
spec:
  replicas: 1
  template:
    metadata:
      labels:
        task: monitoring
        k8s-app: openvpn-status
    spec:
      containers:
      - name: openvpn-status
        ports:
        - containerPort: 80
        image: auspexeu/openvpn-status
        volumeMounts:
        - name: openvpn-status-settings
          mountPath: /usr/src/app/cfg.json
          subPath: cfg.json
      volumes:    
      - name: openvpn-status-settings
        configMap:
          name: openvpn-status-config
          items:
          - key: cfg.json
            path: cfg.json
          defaultMode: 0744
---
apiVersion: v1
kind: Service
metadata:
  labels:
    task: monitoring
    # For use as a Cluster add-on (https://github.com/kubernetes/kubernetes/tree/master/cluster/addons)
    # If you are NOT using this as an addon, you should comment out this line.
    kubernetes.io/cluster-service: 'true'
    kubernetes.io/name: openvpn-status
  name: openvpn-status
  namespace: monitoring
spec:
  ports:
  - port: 80
    targetPort: 80
  selector:
    k8s-app: openvpn-status
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: openvpn-status
  namespace: monitoring
spec:
  rules:
  - host: openvpn.bas
    http:
      paths:
      - path: /
        backend:
          serviceName: openvpn-status
          servicePort: 80