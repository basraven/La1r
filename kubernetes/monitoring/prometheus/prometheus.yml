---
apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-config
  namespace: monitoring
data:
  prometheus.yml: |-
    global:
      scrape_interval: 15s
      scrape_timeout: 10s
      evaluation_interval: 15s
    alerting:
      alertmanagers:
      - static_configs:
        - targets: []
        scheme: http
        timeout: 10s
    scrape_configs:
    - job_name: 'targetsjson'
      file_sd_configs:
      - files:
        - '/etc/prometheus/targets.json'

    # - job_name: qbittorent
    #   scrape_interval: 5s
    #   static_configs:
    #   - targets: ['exporter-qbittorent.monitoring:80']
    #     labels:
    #       jobscope: 'application'
    # - job_name: openvpn
    #   scrape_interval: 5s
    #   static_configs:
    #   - targets:
    #     - exporter-openvpn:80
    #     labels:
    #       jobscope: 'application'
    # - job_name: traefik-online
    #   scrape_interval: 3s
    #   static_configs:
    #   - targets:
    #     - online-traefik-ingress-service.online:8082
    #     labels:
    #       jobscope: 'application'

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-targets
  namespace: monitoring
data:
  targets.json: |-
    [
      {
        "targets": [
          "localhost:9090"
        ],
        "labels": {
          "targetname": "prometheus-local",
          "jobscope": "application"
        }
      },
      {
        "targets": [
          "192.168.5.1:9100"
        ],
        "labels": {
          "targetname": "linux-wayne",
          "jobscope": "node",
          "nodetype": "cluster-node"
        }
      },
      {
        "targets": [
          "192.168.5.2:9100"
        ],
        "labels": {
          "targetname": "50centos",
          "jobscope": "node",
          "nodetype": "cluster-node"
        }
      },
      {
        "targets": [
          "192.168.9.71:9100"
        ],
        "labels": {
          "targetname": "ali-bel",
          "jobscope": "node",
          "nodetype": "peripheral-node"
        }
      },
      {
        "targets": [
          "192.168.15.243:9100"
        ],
        "labels": {
          "targetname": "kodi-e",
          "jobscope": "node",
          "nodetype": "peripheral-node"
        }
      },
      {
        "targets": [
          "traefik-ingress-service.traefik:8082"
        ],
        "labels": {
          "targetname": "traefik",
          "jobscope": "application"
        }
      },
      {
        "targets": [
          "kube-state-metrics.kube-system:8080"
        ],
        "labels": {
          "targetname": "kube-state-metrics",
          "jobscope": "application"
        }
      }
    ]


---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: monitoring-prometheus
  namespace: monitoring
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: monitoring-prometheus
  template:
    metadata:
      labels:
        task: monitoring
        k8s-app: monitoring-prometheus
    spec:
      containers:
      - name: prometheus
        ports:
        - containerPort: 9090
        image: prom/prometheus
        volumeMounts:
        - name: prometheus
          mountPath: /prometheus
        - name: prometheus-config
          mountPath: /etc/prometheus/prometheus.yml
          subPath: prometheus.yml
        - name: prometheus-targets
          mountPath: /etc/prometheus/targets.json
          subPath: targets.json
      volumes:
      - name: prometheus
        persistentVolumeClaim:
          claimName: prometheus-claim
      - name: prometheus-config
        configMap:
          name: prometheus-config
          items:
          - key: prometheus.yml
            path: prometheus.yml
          defaultMode: 0744
      - name: prometheus-targets
        configMap:
          name: prometheus-targets
          items:
          - key: targets.json
            path: targets.json
          defaultMode: 0744
---
apiVersion: v1
kind: Service
metadata:
  labels:
    task: monitoring
  name: monitoring-prometheus
  namespace: monitoring
spec:
  ports:
  - port: 80
    targetPort: 9090
  selector:
    k8s-app: monitoring-prometheus
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: prometheus-ingress
  namespace: monitoring
  # annotations:
  #   kubernetes.io/ingress.class: traefik
spec:
  rules:
  - host: prometheus.bas
    http:
      paths:
      - path: /
        backend:
          serviceName: monitoring-prometheus
          servicePort: 80