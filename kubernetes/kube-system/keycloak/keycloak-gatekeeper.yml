---
apiVersion: v1
kind: ConfigMap
metadata: 
  name: gatekeeper-config
  namespace: kube-system
data:
  keycloak-auth-proxy.conf: |-
    # is the url for retrieve the OpenID configuration - normally the <server>/auth/realm/<realm_name>
    discovery-url: https://auth.idocker.hacking-lab.com/auth/realms/master
    # skip tls verify
    skip-openid-provider-tls-verify: true
    # the client id for the 'client' application
    client-id: ttyd
    # the interface definition you wish the proxy to listen, all interfaces is specified as ':<port>', unix sockets as unix://<REL_PATH>|</ABS PATH>
    listen: :3000
    # the secret associated to the 'client' application
    client-secret: 51cba49f-79bf-4fdc-b7fc-3b0eb39adee6
    # whether to enable refresh tokens
    enable-refresh-tokens: true
    # the location of a certificate you wish the proxy to use for TLS support
    tls-cert:
    # the location of a private key for TLS
    tls-private-key:
    # the redirection url, essentially the site url, note: /oauth/callback is added at the end
    redirection-url: https://ttyd.idocker.hacking-lab.com
    # the encryption key used to encode the session state
    encryption-key: vGcLt8ZUdPX5fXhtLZaPHZkGWHZrT6aa
    # the upstream endpoint which we should proxy request
    upstream-url: http://ttyd:7681/
    # additional scopes to add to add to the default (openid+email+profile)
    scopes:
    #- vpn-user
    # a collection of resource i.e. urls that you wish to protect
    # ======================================================================
    resources:
    - uri: /*
      methods:
      - GET 

    # - uri: /admin/*
    #   methods:
    #   - GET
    #   roles:
    #   - openvpn:vpn-user
    #   - openvpn:prod-vpn

    # - uri: /admin/*
    #   methods:
    #   - GET
    #   roles:
    #   - openvpn:vpn-user
    #   - openvpn:commons-prod-vpn


---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: keycloak-gatekeeper
  namespace: kube-system
  labels:
    app: keycloak-gatekeeper
spec:
  replicas: 1
  selector:
    matchLabels:
      app: keycloak-gatekeeper
  template:
    metadata:
      labels:
        app: keycloak-gatekeeper
    spec:
      volumes:
        - name: gatekeeper-config
          configMap:
            name: gatekeeper-config
            items:
            - key: keycloak-auth-proxy.conf
              path: keycloak-auth-proxy.conf
            defaultMode: 0755
      containers:
      - name: keycloak-gatekeeper
        image: keycloak/keycloak-gatekeeper
            
        entrypoint: 
          - /opt/keycloak-gatekeeper
          - --config=/etc/keycloak-gatekeeper.conf
        ports:
        - name: http
          containerPort: 3000
        volumeMounts:
          - name: gatekeeper-config
            mountPath: /etc/keycloak-gatekeeper.conf
            subPath: keycloak-gatekeeper.conf
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: keycloak-gatekeeper
  name: keycloak-gatekeeper
  namespace: kube-system
spec:
  ports:
  - name: http
    targetPort: 3000
    port: 80
  selector:
    app: keycloak-gatekeeper
  type: ClusterIP
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: keycloak-gatekeeperingress
  namespace: kube-system
  annotations:
    kubernetes.io/ingress.class: traefik
spec:
  rules:
  - host: keycloak-gatekeeper.bas
    http:
      paths:
      - path: /
        backend:
          serviceName: keycloak-gatekeeper
          servicePort: 80