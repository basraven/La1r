---
apiVersion: v1
kind: ConfigMap
metadata:
  name: openldap-ldif
  namespace: security
data:
  access.rules: |-
    olcAccess: {0}to attrs=userPassword,shadowLastChange by self write by anonymous auth by * none 
    olcAccess: {1}to dn.base="" by * read 
    olcAccess: {2}to * by * read 

    olcPasswordHash: {CRYPT}
    olcPasswordCryptSaltFormat: $6$rounds=50000$%.16s
  base.ldif: |-
    dn: ou=groups,dc=raven,dc=bas
    objectclass: organizationalUnit
    objectclass: top
    ou: groups

    dn: ou=users,dc=raven,dc=bas
    objectclass: organizationalUnit
    objectclass: top
    ou: users

    dn: cn=dev,ou=groups,dc=raven,dc=bas
    cn: dev
    member: cn=john,ou=users,dc=raven,dc=bas
    member: cn=bob,ou=users,dc=raven,dc=bas
    objectclass: groupOfNames
    objectclass: top

    dn: cn=admins,ou=groups,dc=raven,dc=bas
    cn: admins
    member: cn=john,ou=users,dc=raven,dc=bas
    objectclass: groupOfNames
    objectclass: top

    dn: cn=john,ou=users,dc=raven,dc=bas
    cn: john
    objectclass: inetOrgPerson
    objectclass: top
    mail: john.doe@authelia.bas
    sn: John Doe
    userpassword: {CRYPT}$6$rounds=500000$jgiCMRyGXzoqpxS3$w2pJeZnnH8bwW3zzvoMWtTRfQYsHbWbD/hquuQ5vUeIyl9gdwBIt6RWk2S6afBA0DPakbeWgD/4SZPiS0hYtU/

    dn: cn=harry,ou=users,dc=raven,dc=bas
    cn: harry
    objectclass: inetOrgPerson
    objectclass: top
    mail: harry.potter@authelia.bas
    sn: Harry Potter
    userpassword: {CRYPT}$6$rounds=500000$jgiCMRyGXzoqpxS3$w2pJeZnnH8bwW3zzvoMWtTRfQYsHbWbD/hquuQ5vUeIyl9gdwBIt6RWk2S6afBA0DPakbeWgD/4SZPiS0hYtU/

    dn: cn=bob,ou=users,dc=raven,dc=bas
    cn: bob
    objectclass: inetOrgPerson
    objectclass: top
    mail: bob.dylan@authelia.bas
    sn: Bob Dylan
    userpassword: {CRYPT}$6$rounds=500000$jgiCMRyGXzoqpxS3$w2pJeZnnH8bwW3zzvoMWtTRfQYsHbWbD/hquuQ5vUeIyl9gdwBIt6RWk2S6afBA0DPakbeWgD/4SZPiS0hYtU/

    dn: cn=james,ou=users,dc=raven,dc=bas
    cn: james
    objectclass: inetOrgPerson
    objectclass: top
    mail: james.dean@authelia.bas
    sn: James Dean
    userpassword: {CRYPT}$6$rounds=500000$jgiCMRyGXzoqpxS3$w2pJeZnnH8bwW3zzvoMWtTRfQYsHbWbD/hquuQ5vUeIyl9gdwBIt6RWk2S6afBA0DPakbeWgD/4SZPiS0hYtU/

    dn: cn=blackhat,ou=users,dc=raven,dc=bas
    cn: blackhat
    objectclass: inetOrgPerson
    objectclass: top
    mail: billy.blackhat@authelia.bas
    sn: Billy BlackHat
    userpassword: {CRYPT}$6$rounds=500000$jgiCMRyGXzoqpxS3$w2pJeZnnH8bwW3zzvoMWtTRfQYsHbWbD/hquuQ5vUeIyl9gdwBIt6RWk2S6afBA0DPakbeWgD/4SZPiS0hYtU/
  
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: openldap-db-claim
  namespace: security
spec:
  accessModes:
  - ReadWriteMany 
  storageClassName: local-storage
  selector:
    matchLabels:
      contenttype: "openldap-db"
  resources:
    requests:
      storage: 20Gi
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: openldap-config-claim
  namespace: security
spec:
  accessModes:
  - ReadWriteMany 
  storageClassName: local-storage
  selector:
    matchLabels:
      contenttype: "openldap-config"
  resources:
    requests:
      storage: 20Gi
# ---
# apiVersion: v1
# kind: ConfigMap
# metadata:
#   name: openldap-config
#   namespace: security
# data:
#   openldap.conf: |-
#     some config
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: openldap
  namespace: security
  labels:
    app: openldap
spec:
  replicas: 1
  selector:
    matchLabels:
      app: openldap
  template:
    metadata:
      labels:
        app: openldap
    spec:
      volumes:      
      - name: openldap-db-volume
        persistentVolumeClaim:
          claimName: openldap-db-claim
      # - name: openldap-config-volume
      #   persistentVolumeClaim:
      #     claimName: openldap-config-claim
      - name: openldap-config-volume
        configMap:
          name: openldap-ldif
          items:
          - key: access.rules
            path: access.rules
          - key: base.ldif
            path: base.ldif
      containers:
      - name: openldap
        image: osixia/openldap
        args: ['--copy-service']
        ports:
        - name: ldap
          containerPort: 389
        - name: ldaps
          containerPort: 636
        env:
        - name: TZ
          value: Europe/Amsterdam
        - name: LDAP_ORGANISATION
          valueFrom:
            secretKeyRef:
              name: openldap-credentials
              key: LDAP_ORGANISATION
        - name: LDAP_DOMAIN
          valueFrom:
            secretKeyRef:
              name: openldap-credentials
              key: LDAP_DOMAIN
        - name: LDAP_ADMIN_PASSWORD
          valueFrom:
            secretKeyRef:
              name: openldap-credentials
              key: LDAP_ADMIN_PASSWORD
        - name: LDAP_ADDITIONAL_MODULES
          value: memberof
        - name: LDAP_ADDITIONAL_SCHEMAS
          value: openldap
        - name: LDAP_FORCE_RECONFIGURE
          value: "true"
        volumeMounts:
          - name: openldap-config-volume
            mountPath: /container/service/slapd/assets/config/bootstrap/ldif/custom
          # - name: openldap-db-volume
          #   mountPath: /var/lib/ldap
        #   - name: openldap-config-volume
        #     mountPath: /etc/ldap/slapd.d
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: openldap
  name: openldap
  namespace: security
spec:
  ports:
  - name: ldap
    targetPort: 389
    port: 389
  - name: ldaps
    targetPort: 636
    port: 636
  selector:
    app: openldap
  type: ClusterIP
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: openldapingress
  namespace: security
spec:
  rules:
  - host: ldap.bas
    http:
      paths:
      - backend:
          serviceName: openldap
          servicePort: 389
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: openldapsingress
  namespace: security
spec:
  rules:
  - host: ldaps.bas
    http:
      paths:
      - backend:
          serviceName: openldap
          servicePort: 636
  tls:
  - hosts:
    - ldaps.bas