---
kind: PersistentVolume
apiVersion: v1
metadata:
  name: nextcloud-pv-web
  labels:
    contenttype: "web"
spec:
  capacity:
    storage: 5Gi
  # volumeMode field requires BlockVolume Alpha feature gate to be enabled.
  volumeMode: Filesystem
  accessModes:
  - ReadWriteMany
  persistentVolumeReclaimPolicy: Delete
  storageClassName: local-storage
  local:
    path: /host_mnt/c/Users/bas_r/Documents/Projects/server-configs/.tmp/web
  nodeAffinity:
    required:
      nodeSelectorTerms:
      - matchExpressions:
        - key: kubernetes.io/hostname
          operator: In
          values:
          - docker-for-desktop
          - raspi2
---
kind: PersistentVolume
apiVersion: v1
metadata:
  name: nextcloud-pv-data
  labels:
    contenttype: "data"
spec:
  capacity:
    storage: 5Gi
  # volumeMode field requires BlockVolume Alpha feature gate to be enabled.
  volumeMode: Filesystem
  accessModes:
  - ReadWriteMany
  persistentVolumeReclaimPolicy: Delete
  storageClassName: local-storage
  local:
    path: /host_mnt/c/Users/bas_r/Documents/Projects/server-configs/.tmp/data
  nodeAffinity:
    required:
      nodeSelectorTerms:
      - matchExpressions:
        - key: kubernetes.io/hostname
          operator: In
          values:
          - docker-for-desktop
          - raspi2
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: nextcloud-data-claim
  namespace: nextcloud
spec:
  accessModes:
  - ReadWriteMany
  storageClassName: local-storage
  selector:
    matchLabels:
      contenttype: "data"
  resources:
    requests:
      storage: 1Gi
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: nextcloud-web-claim
  namespace: nextcloud
spec:
  accessModes:
  - ReadWriteMany
  storageClassName: local-storage
  selector:
    matchLabels:
      contenttype: "web"
  resources:
    requests:
      storage: 1Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nextcloud
  namespace: nextcloud
  labels:
    app: nextcloud
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nextcloud
  template:
    metadata:
      labels:
        app: nextcloud
    spec:
      # initContainers:
      # - name: init-builder
      #   image: docker
      #   command: ['sh', '-c', 'docker build --file /builder/Dockerfile -t custom-nextcloud /builder']
      #   volumeMounts:
      #   - mountPath: /builder/Dockerfile
      #     subPath: Dockerfile
      #     name: dockerfile-volume
      #   - mountPath: /var/run/docker.sock
      #     name: docker-socket-volume
      #   securityContext:
      #     privileged: true
      volumes:
      # - name: docker-socket-volume
      #   hostPath:
      #     path: /var/run/docker.sock
      #     type: File
      # - name: dockerfile-volume
      #   configMap:
      #     name: dockerfile
      #     items:
      #     - key: Dockerfile
      #       path: Dockerfile
      - name: mysqlini-volume
        configMap:
          name: mysqlini
          items:
          - key: mysql.ini
            path: mysql.ini
      - name: nextcloud-web
        persistentVolumeClaim:
          claimName: nextcloud-web-claim
      - name: nextcloud-data
        persistentVolumeClaim:
          claimName: nextcloud-data-claim
      containers:
      - name: nextcloud
        # image: php:7-apache
        image: nextcloud:15-rc-apache
        # imagePullPolicy: Never
        ports:
        - containerPort: 80
        # volumeMounts:
        #   - mountPath: /usr/local/etc/php/conf.d/mysql.ini
        #     subPath: mysql.ini
        #     name: mysqlini-volume
        #   - mountPath: "/var/www/html/"
        #     name: nextcloud-web
        #   - mountPath: "/data/"
        #     name: nextcloud-data
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: nextcloud
  name: nextcloud-service
  namespace: nextcloud
spec:
  ports:
  - name: web
    port: 80
    targetPort: 80
    nodePort: 31000
  selector:
    app: nextcloud
  type: NodePort
