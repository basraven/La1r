---
# Never deploy more than 1 buoy!
# Requires the followinng commands:
# ADD:
# kubectl exec -n kube-system -it etcd-linux-wayne sh -- etcdctl member add "buoy" --peer-urls=http://192.168.5.100:31389  --cert=/etc/kubernetes/pki/etcd/server.crt --key=/etc/kubernetes/pki/etcd/server.key --cacert=/etc/kubernetes/pki/etcd/ca.crt
# REMOVE:
# kubectl exec -n kube-system -it etcd-linux-wayne sh  -- etcdctl member remove  d303f6098b4c3970 --cert=/etc/kubernetes/pki/etcd/server.crt --key=/etc/kubernetes/pki/etcd/server.key --cacert=/etc/kubernetes/pki/etcd/ca.crt
apiVersion: apps/v1
kind: DaemonSet
metadata:
  labels:
    component: etcdbuoy
    tier: control-plane
  name: etcd-buoy
  namespace: kube-system
spec:
  selector:
    matchLabels:
      app: etcdbuoy
  template:
    metadata:
      labels:
        app: etcdbuoy
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: app
                    operator: In
                    values:
                      - etcdbuoy
              topologyKey: node-role.kubernetes.io/master
      containers:
      - command:
        - etcd
        - "--advertise-client-urls=http://192.168.5.100:31379"
        - --client-cert-auth=true
        - --auto-tls
        - --peer-auto-tls
        # - --data-dir=/var/lib/etcd
        - "--initial-advertise-peer-urls=http://192.168.5.100:31389"
        # - "--initial-cluster=linux-wayne=https://192.168.5.1:2380,50centos=https://192.168.5.2:2380,buoy$(NODE_NAME)=http://192.168.5.100:31389"
        - "--initial-cluster=linux-wayne=https://192.168.5.1:2380,50centos=https://192.168.5.2:2380,buoy=http://192.168.5.100:31389"
        - --initial-cluster-state=existing
        # - --cert-file=/etc/kubernetes/pki/etcd/server.crt
        # - --key-file=/etc/kubernetes/pki/etcd/server.key
        - "--listen-client-urls=http://192.168.5.100:31379"
        # - --listen-metrics-urls=http://127.0.0.1:32381
        - --listen-peer-urls=http://192.168.5.100:31389
        - "--name=buoy"
        - --peer-cert-file=/etc/kubernetes/pki/etcd/peer.crt
        - --peer-key-file=/etc/kubernetes/pki/etcd/peer.key
        - --peer-client-cert-auth=false
        - --peer-trusted-ca-file=/etc/kubernetes/pki/etcd/ca.crt
        - --snapshot-count=10000
        - --trusted-ca-file=/etc/kubernetes/pki/etcd/ca.crt
        image: k8s.gcr.io/etcd:3.4.9-1
        imagePullPolicy: IfNotPresent
        env:
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: NODE_IP
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        # - name: NAMESPACE
        #   valueFrom:
        #     fieldRef:
        #       fieldPath: metadata.namespace
        # ports:
        #     - name: clients
        #       containerPort: 31379
        #       hostPort: 31379
        #     - name: peers
        #       containerPort: 31389
        #       hostPort: 31389
        #     - name: metrics
        #       containerPort: 2381
        #       hostPort: 32381
        # livenessProbe:
        #   failureThreshold: 8
        #   httpGet:
        #     host: 127.0.0.1
        #     path: /health
        #     port: 32381
        #     scheme: HTTP
        #   initialDelaySeconds: 10
        #   periodSeconds: 10
        #   successThreshold: 1
        #   timeoutSeconds: 15
        name: etcd-buoy
        resources: {}
        # startupProbe:
        #   failureThreshold: 24
        #   httpGet:
        #     host: 127.0.0.1
        #     path: /health
        #     port: 32381
        #     scheme: HTTP
        #   initialDelaySeconds: 10
        #   periodSeconds: 10
        #   successThreshold: 1
        #   timeoutSeconds: 15
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /etc/kubernetes/pki/etcd
          name: etcd-certs
      # dnsPolicy: ClusterFirst
      # enableServiceLinks: true
      hostNetwork: true
      # nodeName: 50centos
      preemptionPolicy: PreemptLowerPriority
      priority: 2000001000
      priorityClassName: system-node-critical
      restartPolicy: Always
      # schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 0
      tolerations:
      - effect: NoExecute
        operator: Exists
      - key: node.kubernetes.io/not-ready
        effect: NoExecute
        tolerationSeconds: 0
      - key: node.kubernetes.io/unreachable
        effect: NoExecute
        tolerationSeconds: 0
      volumes:
      - hostPath:
          path: /etc/kubernetes/pki/etcd
          type: DirectoryOrCreate
        name: etcd-certs
      # - hostPath:
      #     path: /var/lib/etcd2
      #     type: DirectoryOrCreate
      #   name: etcd-data