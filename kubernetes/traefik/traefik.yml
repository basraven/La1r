# ---
# apiVersion: v1
# kind: ConfigMap
# metadata:
#   name: traefik-extra-config
#   namespace: traefik
# data:
#   extra.toml: |-
#     # in files/extra.toml

#     # [[tls.certificates]]
#     #   certFile = "/ssl/kubernetes/tls.crt" 
#     #   keyFile = "/ssl/kubernetes/tls.key"
    
#     # [[tls.certificates]]
#     #   certFile = "/ssl/cloud/tls.crt" 
#     #   keyFile = "/ssl/cloud/tls.key"
    
#     # [[tls.certificates]]
#     #   certFile = "/ssl/grafana/tls.crt" 
#     #   keyFile = "/ssl/grafana/tls.key"
    
#     # [[tls.certificates]]
#     #   certFile = "/ssl/torrent/tls.crt" 
#     #   keyFile = "/ssl/torrent/tls.key"
    
#     # [[tls.certificates]]
#     #   certFile = "/ssl/plex/tls.crt" 
#     #   keyFile = "/ssl/plex/tls.key"
    
#     # [[tls.certificates]]
#     #   certFile = "/ssl/sonarr/tls.crt" 
#     #   keyFile = "/ssl/sonarr/tls.key"
    
#     # [[tls.certificates]]
#     #   certFile = "/ssl/radarr/tls.crt" 
#     #   keyFile = "/ssl/radarr/tls.key"
---
kind: DaemonSet
apiVersion: apps/v1
metadata:
  name: traefik-ingress-controller
  namespace: traefik
  labels:
    app: traefik-ingress-controller
spec:
  selector:
    matchLabels:
      name: traefik-ingress-controller
  template:
    metadata:
      labels:
        app: traefik-ingress-controller
        name: traefik-ingress-controller
    spec:
      volumes:
      # FIXME: Can't remember why we have these cert volumes
      # - name: traefik-extra-config
      #   configMap:
      #     name: traefik-extra-config
      #     items:
      #     - key: extra.toml
      #       path: extra.toml
      # - name: kubernetes-cert-volume
      #   secret:
      #     secretName: kubernetes-cert
      # - name: cloud-cert-volume
      #   secret:
      #     secretName: cloud-cert
      # - name: grafana-cert-volume
      #   secret:
      #     secretName: grafana-cert
      # - name: torrent-cert-volume
      #   secret:
      #     secretName: torrent-cert
      # - name: plex-cert-volume
      #   secret:
      #     secretName: plex-cert
      # - name: sonarr-cert-volume
      #   secret:
      #     secretName: sonarr-cert
      # - name: radarr-cert-volume
      #   secret:
      #     secretName: radarr-cert



      serviceAccountName: traefik-ingress-controller
      # terminationGracePeriodSeconds: 60
      containers:
      - name: traefik-ingress-controller
        image: traefik:v2.3
        # volumeMounts:
        # - name: traefik-extra-config
        #   mountPath: /extra/extra.toml
        #   subPath: extra.toml



        # - name: kubernetes-cert-volume
        #   mountPath: /ssl/kubernetes/
        # - name: cloud-cert-volume
        #   mountPath: /ssl/cloud/
        # - name: grafana-cert-volume
        #   mountPath: /ssl/grafana/
        # - name: torrent-cert-volume
        #   mountPath: /ssl/torrent/
        # - name: plex-cert-volume
        #   mountPath: /ssl/plex/
        # - name: sonarr-cert-volume
        #   mountPath: /ssl/sonarr/
        # - name: radarr-cert-volume
        #   mountPath: /ssl/radarr/



        ports:
        - name: http
          containerPort: 80
          # hostPort: 80
        - name: https
          containerPort: 443
          # hostPort: 443
        - name: admin
          containerPort: 8080
          # hostPort: 8080
        - name: prometheus
          containerPort: 8082
        # securityContext:
        #   capabilities:
        #     drop:
        #     - ALL
        #     add:
        #     - NET_BIND_SERVICE
        args:
          - --api.insecure
          - --accesslog
          - --metrics=true
          - --serverstransport.insecureskipverify
          - --metrics.prometheus=true
          - --metrics.prometheus.entryPoint=metrics
          - --entrypoints.metrics.Address=:8082
          - --entrypoints.web.Address=:80
          - --entrypoints.websecure.Address=:443
          - --providers.kubernetesingress
          - --providers.kubernetescrd
          - --providers.kubernetescrd.labelselector=expose!=online
          # - --metrics.influxdb=true
          # - --metrics.influxdb.address="monitoring-influxdb.monitoring"
          # - --metrics.influxdb.database="traefik"
          # - --metrics.influxdb.username="bas"
          # - --metrics.influxdb.password="Example1"
          # - --metrics.influxdb.pushInterval=10s
          # - --providers.file.directory=/extra/
          # - --providers.file.watch=true
          # - --certificatesresolvers.default.acme.tlschallenge
          # - --certificatesresolvers.default.acme.email=basraven@gmail.com
          # - --certificatesresolvers.default.acme.storage=acme.json
          # - --certificatesresolvers.default.acme.caserver=https://acme-staging-v02.api.letsencrypt.org/directory
---
kind: Service
apiVersion: v1
metadata:
  name: traefik-ingress-service
  namespace: traefik
spec:
  type: ClusterIP
  selector:
    app: traefik-ingress-controller
  ports:
    - protocol: TCP
      port: 80
      name: web
    - protocol: TCP
      port: 443
      name: websecure
    - protocol: TCP
      port: 8080
      name: admin
    - port: 8082
      name: prometheus
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: traefik-web-ui
  namespace: traefik
spec:
  rules:
  - host: traefik.bas
    http:
      paths:
      - path: /
        backend:
          serviceName: traefik-ingress-service
          servicePort: admin
---
apiVersion: v1
kind: Service
metadata:
  name: traefik-loadbalancer-service
  namespace: traefik
spec:
  loadBalancerIP: 192.168.6.1
  type: LoadBalancer
  ports:
    - name: web
      protocol: TCP
      port: 80
      targetPort: 80
    - name: websecure
      protocol: TCP
      port: 443
      targetPort: 443
    - name: admin
      protocol: TCP
      port: 8080
      targetPort: 8080
  selector:
    app: traefik-ingress-controller