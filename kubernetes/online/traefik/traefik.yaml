---
# Source: https://docs.traefik.io/user-guides/crd-acme/
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: ingressroutes.traefik.containo.us
spec:
  group: traefik.containo.us
  version: v1alpha1
  names:
    kind: IngressRoute
    plural: ingressroutes
    singular: ingressroute
  scope: Namespaced
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: ingressroutetcps.traefik.containo.us
spec:
  group: traefik.containo.us
  version: v1alpha1
  names:
    kind: IngressRouteTCP
    plural: ingressroutetcps
    singular: ingressroutetcp
  scope: Namespaced
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: middlewares.traefik.containo.us
spec:
  group: traefik.containo.us
  version: v1alpha1
  names:
    kind: Middleware
    plural: middlewares
    singular: middleware
  scope: Namespaced
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: tlsoptions.traefik.containo.us
spec:
  group: traefik.containo.us
  version: v1alpha1
  names:
    kind: TLSOption
    plural: tlsoptions
    singular: tlsoption
  scope: Namespaced
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1beta1
metadata:
  name: online-traefik-ingress-controller
rules:
  - apiGroups:
      - ""
    resources:
      - services
      - endpoints
      - secrets
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - extensions
    resources:
      - ingresses
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - extensions
    resources:
      - ingresses/status
    verbs:
      - update
  - apiGroups:
      - traefik.containo.us
    resources:
      - middlewares
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - traefik.containo.us
    resources:
      - ingressroutes
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - traefik.containo.us
    resources:
      - ingressroutetcps
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - traefik.containo.us
    resources:
      - tlsoptions
    verbs:
      - get
      - list
      - watch

---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1beta1
metadata:
  name: online-traefik-ingress-controller

roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: online-traefik-ingress-controller
subjects:
  - kind: ServiceAccount
    name: online-traefik-ingress-controller
    namespace: online

---
# Source: https://medium.com/@patrickeasters/using-traefik-with-tls-on-kubernetes-cb67fb43a948
apiVersion: v1
kind: ServiceAccount
metadata:
  name: online-traefik-ingress-controller
  namespace: online
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: online-traefik-ingress-controller
  namespace: online
  labels:
    k8s-app: online-traefik-ingress-lb
spec:
  replicas: 1
  selector:
    matchLabels:
      name: online-traefik-ingress-lb
  template:
    metadata:
      labels:
        k8s-app: online-traefik-ingress-lb
        name: online-traefik-ingress-lb
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.io/hostname
                operator: In
                values:
                - big-raver
      serviceAccountName: online-traefik-ingress-controller
      terminationGracePeriodSeconds: 60
      containers:
      - name: online-traefik-ingress-lb
        image: traefik:v2.0
        ports:
        - name: http
          containerPort: 80
        - name: https
          containerPort: 443
        - name: admin
          containerPort: 8080
        args:
          - --api.insecure
          - --accesslog
          - --metrics=true
          - --metrics.influxdb=true
          - --metrics.influxdb.address="monitoring-influxdb.monitoring:80"
          - --metrics.influxdb.database="online-traefik"
          - --entrypoints.web.Address=:80
          - --entrypoints.websecure.Address=:443
          - --providers.kubernetescrd
          # - --providers.kubernetescrd.namespaces="online"
---
kind: Service
apiVersion: v1
metadata:
  name: online-traefik-ingress-service
  namespace: online
spec:
  selector:
    k8s-app: online-traefik-ingress-lb
  type: NodePort
  ports:
    - protocol: TCP
      port: 80
      nodePort: 31680
      name: web
    - port: 443
      name: websecure
      nodePort: 31643
    - protocol: TCP
      port: 8080
      nodePort: 31681
      name: admin

---
# Source: https://docs.traefik.io/v2.0/middlewares/ratelimit/
# Here, an average of 100 requests per second is allowed.
# In addition, a burst of 50 requests is allowed.
apiVersion: traefik.containo.us/v1alpha1
kind: Middleware
metadata:
  name: online-ratelimit
  namespace: online
spec:
  rateLimit:
      average: 100
      burst: 50
---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: ingressroute-online-nginx
  namespace: online
spec:
  entryPoints:
    - websecure
  routes:
  - match: Host(`cloud.basraven.nl`)
    kind: Rule
    services:
    - name: nginx
      port: 80
      tls: {}
    
    middlewares:
    - name: online-ratelimit
#     - name: test-redirectscheme

# # Source: https://docs.traefik.io/middlewares/redirectscheme/
# # Redirect to https
# apiVersion: traefik.containo.us/v1alpha1
# kind: Middleware
# metadata:
#   name: test-redirectscheme
# spec:
#   redirectScheme:
#     scheme: http
