---
# Source: https://stackoverflow.com/questions/54942723/vernemq-on-kubernetes-cluster/55026577#55026577
# Source: https://medium.com/@johnjjung/building-a-kubernetes-daemonstatefulset-30ad0592d8cb
# Source: https://blog.autsoft.hu/mqtt-vernemq/
apiVersion: v1
kind: ServiceAccount
metadata:
  name: vernemq
---
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: endpoint-reader
rules:
- apiGroups: ["", "extensions", "apps"]
  resources: ["endpoints", "deployments", "replicasets", "pods"]
  verbs: ["get", "list"]
---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1beta1
metadata:
  name: endpoint-reader
subjects:
- kind: ServiceAccount
  name: vernemq
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: endpoint-reader
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: vernemq-claim
  namespace: event
spec:
  accessModes:
    - ReadWriteMany 
  storageClassName: local-storage
  selector:
    matchLabels:
      contenttype: vernemq
  resources:
    requests:
      storage: 20Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: vernemq
  namespace: event
spec:
  # serviceName: vernemq
  replicas: 1
  selector:
    matchLabels:
      app: vernemq
  template:
    metadata:
      labels:
        app: vernemq
    spec:
      # serviceAccountName: vernemq
      # affinity:
      #   podAntiAffinity:
      #     requiredDuringSchedulingIgnoredDuringExecution:
      #     - labelSelector:
      #         matchExpressions:
      #           - key: "app"
      #             operator: In
      #             values:
      #             - vernemq
      #       topologyKey: "kubernetes.io/hostname"
      # volumes:
      #   - name: vernemq
      #     persistentVolumeClaim:
      #       claimName: vernemq-claim
      containers:
      - name: vernemq
        image: vernemq/vernemq
        # volumeMounts:
        #   - name: vernemq
        #     mountPath: /vernemq/data
        ports:
        # - containerPort: 1883
        #   name: mqttlb
        - containerPort: 1883
          name: mqtt
        # - containerPort: 4369
        #   name: epmd
        # - containerPort: 44053
        #   name: vmq
        # - containerPort: 9100
        # - containerPort: 9101
        # - containerPort: 9102
        # - containerPort: 9103
        # - containerPort: 9104
        # - containerPort: 9105
        # - containerPort: 9106
        # - containerPort: 9107
        # - containerPort: 9108
        # - containerPort: 9109
        env:
        - name: DOCKER_VERNEMQ_LOG.console.level
          value: "debug"
        - name: DOCKER_VERNEMQ_ACCEPT_EULA
          value: "yes"
        # - name: DOCKER_VERNEMQ_DISCOVERY_KUBERNETES
        #   value: "1"
        # - name: DOCKER_VERNEMQ_KUBERNETES_APP_LABEL
        #   value: "vernemq"
        # - name: DOCKER_VERNEMQ_KUBERNETES_NAMESPACE
        #   valueFrom:
        #     fieldRef:
        #       fieldPath: metadata.namespace
        # - name: MY_POD_NAME
        #   valueFrom:
        #    fieldRef:
        #      fieldPath: metadata.name
        # - name: DOCKER_VERNEMQ_ERLANG__DISTRIBUTION__PORT_RANGE__MINIMUM
        #   value: "9100"
        # - name: DOCKER_VERNEMQ_ERLANG__DISTRIBUTION__PORT_RANGE__MAXIMUM
        #   value: "9109"
        # - name: DOCKER_VERNEMQ_listener.tcp.default
        #   value: "0.0.0.0:1883"
        - name: DOCKER_VERNEMQ_KUBERNETES_INSECURE
          value: "1"
        # only allow anonymous access for development / testing purposes!
        - name: DOCKER_VERNEMQ_ALLOW_ANONYMOUS
          value: "on"
# ---
# apiVersion: v1
# kind: Service
# metadata:
#   name: vernemq
#   labels:
#     app: vernemq
# spec:
#   clusterIP: None
#   selector:
#     app: vernemq
#   ports:
#   - port: 4369
#     name: empd
#   - port: 44053
#     name: vmq
# ---
# apiVersion: v1
# kind: Service
# metadata:
#   name: vernemq
#   labels:
#     app: vernemq
#   namespace: event
# spec:
#   selector:
#     app: vernemq
#     k8s-app: vernemq
#   ports:
#   - name: mqtt
#     port: 1883
#     targetPort: 1883


---
apiVersion: v1
kind: Service
metadata:
  name: vernemq
  namespace: event
spec:
  ports:
  - protocol: TCP
    name: mqtt
    port: 1883
    targetPort: 1883
  selector:
    app: vernemq

