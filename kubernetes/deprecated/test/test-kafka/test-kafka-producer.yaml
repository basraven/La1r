---
apiVersion: v1
kind: ConfigMap
metadata:
  name: producer-script
  namespace: default
data:
  init.sh: |-
    #!/bin/sh
    pip install kafka-python
    python3 /producer/producer.py

  producer.py: |-
    #!/usr/local/bin/python3
    from time import sleep
    from json import dumps
    from kafka import KafkaProducer

    interval = 10
    print("Starting producer with %i as interval" % interval)
    producer = KafkaProducer(bootstrap_servers=["kafka.event:9092"], value_serializer=lambda x: dumps(x).encode("utf-8"))

    e = 0             
    while True:
        e += 1
        data = {"data" : e}
        print("Produced")
        print(data)
        producer.send("test", value=data)
        sleep(interval)

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: test-kafka-producer
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: test-kafka-producer
  template:
    metadata:
      labels:
        task: default
        k8s-app: test-kafka-producer
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.io/hostname
                operator: In
                values:
                - linux-wayne
      volumes:
        - name: init-script-volume
          configMap:
            name: producer-script
            items:
            - key: init.sh
              path: init.sh
            defaultMode: 0744
        - name: producer-script-volume
          configMap:
            name: producer-script
            items:
            - key: producer.py
              path: producer.py
            defaultMode: 0744
      containers:
      - name: python3
        ports:
        - containerPort: 80
        image: python:3-alpine
        env:
          - name: PYTHONUNBUFFERED
            value: "1"
        command: 
          - /init/init.sh
        volumeMounts:
        - name: init-script-volume
          mountPath: /init
        - name: producer-script-volume
          mountPath: /producer
# ---
# apiVersion: v1
# kind: Service
# metadata:
#   labels:
#     task: test-kafka-producer
#   name: test-kafka-producer
#   namespace: event
# spec:
#   ports:
#   - port: 80
#     targetPort: 80
#   selector:
#     k8s-app: test-kafka-producer
# ---
# apiVersion: extensions/v1beta1
# kind: Ingress
# metadata:
#   name: test-kafka-producer
#   namespace: default
# spec:
#   rules:
#   - host: test-kafka-producer.bas
#     http:
#       paths:
#       - path: /
#         backend:
#           serviceName: test-kafka-producer
#           servicePort: 80