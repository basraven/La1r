---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: qbittorrent-state-claim
  namespace: torrent
spec:
  accessModes:
  - ReadWriteMany 
  storageClassName: local-storage
  selector:
    matchLabels:
      contenttype: "qbittorrent-state"
  resources:
    requests:
      storage: 20Gi
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: qbittorrent-config
  namespace: torrent
data:
  set-goose.sh: |-
    #!/bin/sh
    connect_openvpn(){
      echo "#>>>>> in connection function"
      openvpn /etc/openvpn/cert1.conf &
      sleep 10
      if curl -s --head  --request GET www.google.com | grep "200 OK" > /dev/null ; then
          echo "#>>>>> Online with cert1"
          return 0
      else
          echo "#>>>>> Offline with cert1"
          openvpn /etc/openvpn/cert2.conf &
          sleep 10
          if curl -s --head  --request GET www.google.com | grep "200 OK" > /dev/null ; then
              echo "#>>>>> Online with cert2"
              return 0
          else
              echo "#>>>>> Offline with cert2"
              openvpn /etc/openvpn/cert3.conf &
              sleep 10
              if curl -s --head  --request GET www.google.com | grep "200 OK" > /dev/null ; then
                  echo "#>>>>> Online with cert3"
                  return 0
              else
                  echo "#>>>>> Offline with cert3"
              fi
          fi
      fi
    }
    
    set -eu
    echo "[OPENVPN] Creating GooseVPN connection"
    apt-get update
    apt-get install openvpn -y
    # echo AUTOSTART="all" >> /etc/default/openvpn
    sleep 10 ; connect_openvpn & 
    /init
  qBittorrent.conf: |-
    [AutoRun]
    enabled=false
    program=

    [BitTorrent]
    Session\Categories=@Variant(\0\0\0\b\0\0\0\x2\0\0\0\f\0s\0\x65\0r\0i\0\x65\0s\0\0\0\n\0\0\0\"\0/\0\x64\0o\0w\0n\0l\0o\0\x61\0\x64\0s\0/\0s\0\x65\0r\0i\0\x65\0s\0\0\0\f\0m\0o\0v\0i\0\x65\0s\0\0\0\n\0\0\0\"\0/\0\x64\0o\0w\0n\0l\0o\0\x61\0\x64\0s\0/\0m\0o\0v\0i\0\x65\0s)
    Session\CreateTorrentSubfolder=true
    Session\DisableAutoTMMByDefault=false
    Session\DisableAutoTMMTriggers\CategoryChanged=false
    Session\DisableAutoTMMTriggers\CategorySavePathChanged=false
    Session\DisableAutoTMMTriggers\DefaultSavePathChanged=false

    [Core]
    AutoDeleteAddedTorrentFile=Never

    [LegalNotice]
    Accepted=true

    [Preferences]
    Bittorrent\AddTrackers=false
    Bittorrent\MaxRatioAction=0
    Bittorrent\PeX=true
    Connection\GlobalDLLimitAlt=10
    Connection\GlobalUPLimitAlt=10
    Connection\Interface=tun0
    Connection\PortRangeMin=6881
    Connection\UPnP=false
    Downloads\PreAllocation=true
    Downloads\SavePath=/downloads/
    Downloads\ScanDirsV2=@Variant(\0\0\0\x1c\0\0\0\0)
    Downloads\StartInPause=false
    Downloads\TempPath=/downloads/incomplete/
    Downloads\UseIncompleteExtension=true
    DynDNS\DomainName=changeme.dyndns.org
    DynDNS\Enabled=false
    DynDNS\Password=
    DynDNS\Service=0
    DynDNS\Username=
    General\Locale=
    General\UseRandomPort=false
    MailNotification\email=
    MailNotification\enabled=false
    MailNotification\password=adminadmin
    MailNotification\req_auth=true
    MailNotification\req_ssl=false
    MailNotification\sender=qBittorrent_notification@example.com
    MailNotification\smtp_server=smtp.changeme.com
    MailNotification\username=admin
    Queueing\QueueingEnabled=false
    WebUI\Address=*
    WebUI\AlternativeUIEnabled=false
    WebUI\AuthSubnetWhitelist=0.0.0.0/32, 0.0.0.0/0
    WebUI\AuthSubnetWhitelistEnabled=true
    WebUI\CSRFProtection=true
    WebUI\ClickjackingProtection=true
    WebUI\HTTPS\Enabled=false
    WebUI\HostHeaderValidation=true
    WebUI\LocalHostAuth=false
    WebUI\Port=8080
    WebUI\RootFolder=
    WebUI\ServerDomains=*
    WebUI\UseUPnP=true
    WebUI\Username=admin
  
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: qbittorrent-torrent-claim
  namespace: torrent
spec:
  accessModes:
  - ReadWriteMany 
  storageClassName: local-storage
  selector:
    matchLabels:
      contenttype: "qbittorrent-torrent"
  resources:
    requests:
      storage: 2000Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: qbittorrent
  namespace: torrent
  labels:
    app: qbittorrent
spec:
  replicas: 1
  selector:
    matchLabels:
      app: qbittorrent
  template:
    metadata:
      labels:
        app: qbittorrent
    spec:
      volumes:
      - name: goose-credentials-volume
        secret:
          secretName: goose-credentials
          items:
          - key: login.conf
            path: login.conf
          defaultMode: 0600
      - name: set-goose-ovpn-volume
        secret:
          secretName: goose-credentials
          items:
          - key: cert1.conf
            path: cert1.conf
          - key: cert2.conf
            path: cert2.conf
          - key: cert3.conf
            path: cert3.conf
          defaultMode: 0744
      
      - name: qbittorrent-config-client
        configMap:
          name: qbittorrent-config
          items:
          - key: qBittorrent.conf
            path: qBittorrent.conf
          defaultMode: 0744
      - name: qbittorrent-config-goose
        configMap:
          name: qbittorrent-config
          items:
          - key: set-goose.sh
            path: set-goose.sh
          defaultMode: 0744
      
      - name: torrent
        persistentVolumeClaim:
          claimName: qbittorrent-torrent-claim
      - name: qbittorrent-state
        persistentVolumeClaim:
          claimName: qbittorrent-state-claim
      containers:
      - name: qbittorrent
        # livenessProbe:
        #   exec:
        #     command:
        #     - curl
        #     - www.google.com
        #   initialDelaySeconds: 300
        #   periodSeconds: 60
        # resources:
        #   limits:
        #     memory: 300Mi
        #     cpu: 100m
        image: linuxserver/qbittorrent
        command: [ "/goose/set-goose.sh"]
        securityContext:
          allowPrivilegeEscalation: true
          privileged: true
          capabilities:
            add:
              - NET_ADMIN
        ports:
        - name: http
          containerPort: 8080
        - name: bittorrent-port
          containerPort: 6881
        env:
        - name: TZ
          value: Europe/Amsterdam
        - name: PGID
          value: "1000"
        - name: PUID
          value: "1000"
        - name: WEBUI_PORT
          value: "8080"
        volumeMounts:
          - name: torrent
            mountPath: /downloads
          - name: qbittorrent-config-client
            mountPath: /config/qBittorrent/qBittorrent.conf
            subPath: qBittorrent.conf
          - name: qbittorrent-config-goose
            mountPath: /goose/set-goose.sh
            subPath: set-goose.sh
          - name: qbittorrent-state
            mountPath: /config
          - name: set-goose-ovpn-volume
            mountPath: /etc/openvpn/cert1.conf
            subPath: cert1.conf
          - name: set-goose-ovpn-volume
            mountPath: /etc/openvpn/cert2.conf
            subPath: cert2.conf
          - name: set-goose-ovpn-volume
            mountPath: /etc/openvpn/cert3.conf
            subPath: cert3.conf
          - name: goose-credentials-volume
            mountPath: /goose/login.conf
            subPath: login.conf
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: qbittorrent
  name: qbittorrent
  namespace: torrent
spec:
  ports:
  - name: http
    targetPort: 8080
    port: 80
  selector:
    app: qbittorrent
  type: ClusterIP
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: qbittorrentingress
  namespace: torrent
  # annotations:
  #   kubernetes.io/ingress.class: traefik
spec:
  rules:
  - host: torrent.bas
    http:
      paths:
      - backend:
          serviceName: qbittorrent
          servicePort: 80
  - host: torrent.thuis
    http:
      paths:
      - backend:
          serviceName: qbittorrent
          servicePort: 80
  tls:
  - hosts:
    - torrent.bas