---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: qbittorrent-torrent-claim
  namespace: torrent
spec:
  accessModes:
  - ReadWriteMany 
  storageClassName: local-storage
  selector:
    matchLabels:
      contenttype: "qbittorrent-torrent"
  resources:
    requests:
      storage: 2000Gi
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: qbittorrent-config-claim
  namespace: torrent
spec:
  accessModes:
  - ReadWriteMany 
  storageClassName: local-storage
  selector:
    matchLabels:
      contenttype: "qbittorrent-config"
  resources:
    requests:
      storage: 2Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: qbittorrent
  namespace: torrent
  labels:
    app: qbittorrent
spec:
  replicas: 1
  selector:
    matchLabels:
      app: qbittorrent
  template:
    metadata:
      labels:
        app: qbittorrent
    spec:
      volumes:
      - name: goose-credentials-volume
        secret:
          secretName: goose-credentials
          items:
          - key: login.conf
            path: login.conf
          defaultMode: 0600
      - name: set-goose-ovpn-volume
        secret:
          secretName: goose-credentials
          items:
          - key: ro-10.conf
            path: ro-10.conf
          defaultMode: 0744
      - name: qbittorrent-config-volume
        persistentVolumeClaim:
          claimName: qbittorrent-config-claim
      - name: set-goose-config-volume
        configMap:
          name: qbittorrent-config
          items:
          - key: set-goose.sh
            path: set-goose.sh
          defaultMode: 0744
      - name: torrent
        persistentVolumeClaim:
          claimName: qbittorrent-torrent-claim
      containers:
      - name: qbittorrent
        image: linuxserver/qbittorrent
        command: [ "/goose/set-goose.sh"]
        securityContext:
          allowPrivilegeEscalation: true
          privileged: true
          capabilities:
            add:
              - NET_ADMIN
        ports:
        - name: http
          containerPort: 8080
        - name: bittorrent-port
          containerPort: 6881
        env:
        - name: TZ
          value: Europe/Amsterdam
        - name: PGID
          value: "1000"
        - name: PUID
          value: "1000"
        - name: WEBUI_PORT
          value: "8080"
        volumeMounts:
          - name: torrent
            mountPath: /downloads
          - name: qbittorrent-config-volume
            mountPath: /config/
          - name: set-goose-config-volume
            mountPath: /goose/set-goose.sh
            subPath: set-goose.sh
          - name: set-goose-ovpn-volume
            mountPath: /etc/openvpn/ro-10.conf
            subPath: ro-10.conf
          - name: goose-credentials-volume
            mountPath: /goose/login.conf
            subPath: login.conf
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: qbittorrent
  name: qbittorrent
  namespace: torrent
spec:
  ports:
  - name: http
    targetPort: 8080
    port: 80
  selector:
    app: qbittorrent
  type: ClusterIP
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: qbittorrentingress
  namespace: torrent
  # annotations:
  #   kubernetes.io/ingress.class: traefik
spec:
  rules:
  - host: torrent.bas
    http:
      paths:
      - path: /
        backend:
          serviceName: qbittorrent
          servicePort: 80