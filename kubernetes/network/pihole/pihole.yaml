# ---
# kind: PersistentVolumeClaim
# apiVersion: v1
# metadata:
#   name: pihole-claim
#   namespace: nextcloud
# spec:
#   accessModes:
#   - ReadWriteMany
#   storageClassName: local-storage
#   selector:
#     matchLabels:
#       contenttype: "db"
#   resources:
#     requests:
#       storage: 30Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: pihole
  namespace: network
  labels:
    app: pihole
spec:
  replicas: 1
  selector:
    matchLabels:
      app: pihole
  template:
    metadata:
      labels:
        app: pihole
    spec:
      # volumes:
      # - name: mycnf-volume
      #   configMap:
      #     name: mycnf
      #     items:
      #     - key: my.cnf
      #       path: my.cnf
      # - name: pihole
      #   persistentVolumeClaim:
      #     claimName: pihole-claim
      containers:
      - name: pihole
        image: pihole/pihole
        securityContext:
          capabilities:
            add:
              - NET_ADMIN
        ports:
        - containerPort: 53
        - containerPort: 80
        - containerPort: 443
        env:
        - name: WEBPASSWORD
          value: "admin"
        - name: ServerIP
          value: "10.8.0.1"
        - name: DNS1
          value: "1.1.1.1"
        - name: DNS2
          value: "8.8.8.8"
        - name: DNS3
          value: "8.8.4.4"
        - name: VIRTUAL_HOST
          value: "pihole.bas"
        # - name: MYSQL_DATABASE
        #   value: nextcloud
        # - name: MYSQL_USER
        #   valueFrom:
        #     secretKeyRef:
        #       name: piholesecret
        #       key: username
        # - name: MYSQL_PASSWORD
        #   valueFrom:
        #     secretKeyRef:
        #       name: piholesecret
        #       key: password
        # volumeMounts:
        #   - name: mycnf-volume
        #     mountPath: /etc/mysql/conf.d
        #     subPath: custom.cnf
        #   - name: pihole
        #     mountPath: "/var/lib/mysql/"
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: pihole
  name: pihole
  namespace: network
spec:
  ports:
  - name: http
    targetPort: 80
    port: 80
  selector:
    app: pihole
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: pihole
  name: pihole-dns
  namespace: network
spec:
  ports:
  - name: dns
    targetPort: 53
    port: 443
  selector:
    app: pihole
  type: ClusterIP
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: piholeingress
  namespace: network
  # annotations:
  #   kubernetes.io/ingress.class: traefik
spec:
  rules:
  - host: pihole.bas
    http:
      paths:
      - path: /
        backend:
          serviceName: pihole
          servicePort: 80
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: piholeingress-dns
  namespace: network
  # annotations:
  #   kubernetes.io/ingress.class: traefik
spec:
  rules:
  - host: pihole-dns.bas
    http:
      paths:
      - path: /
        backend:
          serviceName: pihole-dns
          servicePort: 443
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: pihole
  name: pihole-dns-local
  namespace: network
spec:
  ports:
  - name: dns
    port: 32453
    nodePort: 32453
  selector:
    app: pihole
  type: NodePort
