---
apiVersion: v1
kind: ConfigMap
metadata:
  name: code-server-init
  namespace: development
data:
  init.sh: |-
    #!/bin/bash
    sudo apt-get update
    sudo -i
    curl -LO https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl
    chmod +x ./kubectl
    sudo mv ./kubectl /usr/local/bin/kubectl
    mkdir ~/.kube
    cat ~/.local/kube-config > ~/.kube/config
    git config --global user.name "Sebastiaan Raven"
    git config --global user.email "basraven@gmail.com"
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: code-server-claim
  namespace: development
spec:
  accessModes:
  - ReadWriteMany 
  storageClassName: local-storage
  selector:
    matchLabels:
      contenttype: "code-server"
  resources:
    requests:
      storage: 200Gi
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: code-server-config-claim-local
  namespace: development
spec:
  accessModes:
  - ReadWriteMany 
  storageClassName: local-storage
  selector:
    matchLabels:
      contenttype: "code-server-config-local"
  resources:
    requests:
      storage: 20Gi
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: code-server-config-claim-vscode
  namespace: development
spec:
  accessModes:
  - ReadWriteMany 
  storageClassName: local-storage
  selector:
    matchLabels:
      contenttype: "code-server-config-vscode"
  resources:
    requests:
      storage: 20Gi
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: code-server
  namespace: development
spec:
  replicas: 1
  template:
    metadata:
      labels:
        task: development
        k8s-app: code-server
    spec:
      containers:
      - name: code-server
        ports:
        - containerPort: 8443
        image: codercom/code-server
        command: ["/bin/bash"]
        args: ["-c", "/seb/init.sh && dumb-init code-server --no-auth"]
        volumeMounts:
          - name: code-server
            mountPath: /home/coder/project
          - name: code-server-config-local
            mountPath: /home/coder/.local
          - name: code-server-config-vscode
            mountPath: /home/coder/.vscode
          - name: code-server-init
            mountPath: /seb/init.sh
            subPath: init.sh
      volumes:
        - name: code-server
          persistentVolumeClaim:
            claimName: code-server-claim
        - name: code-server-config-local
          persistentVolumeClaim:
            claimName: code-server-config-claim-local
        - name: code-server-config-vscode
          persistentVolumeClaim:
            claimName: code-server-config-claim-vscode
        - name: code-server-init
          configMap:
            name: code-server-init
            items:
            - key: init.sh
              path: init.sh
            defaultMode: 0755
---
apiVersion: v1
kind: Service
metadata:
  labels:
    task: development
    # For use as a Cluster add-on (https://github.com/kubernetes/kubernetes/tree/master/cluster/addons)
    # If you are NOT using this as an addon, you should comment out this line.
    kubernetes.io/cluster-service: 'true'
    kubernetes.io/name: code-server
  name: code-server
  namespace: development
spec:
  ports:
  - port: 80
    targetPort: 8443
  selector:
    k8s-app: code-server
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: code-server
  namespace: development
spec:
  rules:
  - host: code.bas
    http:
      paths:
      - path: /
        backend:
          serviceName: code-server
          servicePort: 80